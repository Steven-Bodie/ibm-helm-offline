apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  labels:
    app: {{ template "elasticsearch.fullname" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: "{{ .Values.elasticsearch.data.name }}"
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
  name: {{ template "data.fullname" . }}
spec:
  serviceName: {{ .Values.elasticsearch.name }}-data
  replicas: {{ .Values.elasticsearch.data.replicas }}
  selector:
    matchLabels:
      app: {{ template "elasticsearch.fullname" . }}
      component: "{{ .Values.elasticsearch.data.name }}"
      role: data
  updateStrategy:
    type: RollingUpdate
  revisionHistoryLimit: 3
  template:
    metadata:
      labels:
        app: {{ template "elasticsearch.fullname" . }}
        component: "{{ .Values.elasticsearch.data.name }}"
        role: data
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
      {{- if eq .Values.elasticsearch.data.antiAffinity "hard" }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  app: "{{ template "elasticsearch.fullname" . }}"
                  release: "{{ .Release.Name }}"
                  component: "{{ .Values.elasticsearch.data.name }}"
      {{- else if eq .Values.elasticsearch.data.antiAffinity "soft" }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: "{{ template "elasticsearch.fullname" . }}"
                  release: "{{ .Release.Name }}"
                  component: "{{ .Values.elasticsearch.data.name }}"
      {{- end }}
      securityContext:
        fsGroup: 1000
      initContainers:
      - name: "chmod"
        image: "{{ .Values.elasticsearch.initImage.repository }}:{{ .Values.elasticsearch.initImage.tag }}"
        imagePullPolicy: "IfNotPresent"
        command: ["chmod", "777", "/data-dir"]
        securityContext:
          privileged: true
        volumeMounts:
        - name: data
          mountPath: /data-dir
      - name: "sysctl"
        image: "{{ .Values.elasticsearch.initImage.repository }}:{{ .Values.elasticsearch.initImage.tag }}"
        imagePullPolicy: "IfNotPresent"
        command: ["/bin/sh", "-c", "sysctl -w vm.max_map_count=262144 && sed -i '/^vm.max_map_count /d' /etc/sysctl.conf && echo 'vm.max_map_count = 262144' >> /etc/sysctl.conf"]
        securityContext:
          privileged: true
      containers:
      - name: es-data
        securityContext:
          privileged: false
          capabilities:
            add:
              - IPC_LOCK
        image: {{ .Values.elasticsearch.image.repository }}:{{ .Values.elasticsearch.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        resources:
          limits:
            memory: {{ .Values.elasticsearch.data.memoryLimit }}
        env:
        - name: "ES_JAVA_OPTS"
          value: "-Xms{{ .Values.elasticsearch.data.heapSize }} -Xmx{{ .Values.elasticsearch.data.heapSize }}"
        ports:
        - containerPort: {{ .Values.elasticsearch.internalPort }}
          name: transport
          protocol: TCP
        volumeMounts:
        - name: data
          mountPath: /usr/share/elasticsearch/data
        - name: config
          mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          subPath: elasticsearch.yml
      volumes:
        - name: config
          configMap:
            name: {{ template "elasticsearch.fullname" . }}-config
            items:
              - key: data.yml
                path: elasticsearch.yml
  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        app: {{ template "elasticsearch.fullname" . }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        component: "{{ .Values.elasticsearch.data.name }}"
        heritage: "{{ .Release.Service }}"
        release: "{{ .Release.Name }}"
    spec:
      accessModes:
    {{- range .Values.elasticsearch.data.storage.accessModes }}
        - {{ . | quote }}
    {{- end }}
      resources:
        requests:
          storage: {{ .Values.elasticsearch.data.storage.size | quote }}
    {{- if not (eq "null" .Values.elasticsearch.data.storage.storageClass) }}
    {{- if (eq "-" .Values.elasticsearch.data.storage.storageClass) }}
      storageClassName: ""
    {{- else }}
      storageClassName: "{{ .Values.elasticsearch.data.storage.storageClass }}"
    {{- end }}
    {{- end }}

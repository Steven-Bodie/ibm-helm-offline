apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: {{ template "elasticsearch.fullname" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: "{{ .Values.elasticsearch.master.name }}"
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
  name: {{ template "master.fullname" . }}
spec:
  replicas: {{ .Values.elasticsearch.master.replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: {{ template "elasticsearch.fullname" . }}
        component: "{{ .Values.elasticsearch.master.name }}"
        release: {{ .Release.Name }}
        role: master
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
      {{- if eq .Values.elasticsearch.master.antiAffinity "hard" }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  app: "{{ template "elasticsearch.fullname" . }}"
                  release: "{{ .Release.Name }}"
                  component: "{{ .Values.elasticsearch.master.name }}"
      {{- else if eq .Values.elasticsearch.master.antiAffinity "soft" }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: "{{ template "elasticsearch.fullname" . }}"
                  release: "{{ .Release.Name }}"
                  component: "{{ .Values.elasticsearch.master.name }}"
      {{- end }}
      initContainers:
      - name: "sysctl"
        image: "{{ .Values.elasticsearch.initImage.repository }}:{{ .Values.elasticsearch.initImage.tag }}"
        imagePullPolicy: "IfNotPresent"
        command: ["/bin/sh", "-c", "sysctl -w vm.max_map_count=262144 && sed -i '/^vm.max_map_count /d' /etc/sysctl.conf && echo 'vm.max_map_count = 262144' >> /etc/sysctl.conf"]
        securityContext:
          privileged: true
      containers:
      - name: es-master
        securityContext:
          privileged: false
          capabilities:
            add:
              - IPC_LOCK
        image: {{ .Values.elasticsearch.image.repository }}:{{ .Values.elasticsearch.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        resources:
          limits:
            memory: {{ .Values.elasticsearch.master.memoryLimit }}
        env:
        - name: "ES_JAVA_OPTS"
          value: "-Xms{{ .Values.elasticsearch.master.heapSize }} -Xmx{{ .Values.elasticsearch.master.heapSize }}"
        ports:
        - containerPort: {{ .Values.elasticsearch.internalPort }}
          name: transport
          protocol: TCP
        volumeMounts:
        - name: data
          mountPath: /usr/share/elasticsearch/data
        - name: config
          mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          subPath: elasticsearch.yml
      volumes:
          - emptyDir:
              medium: ""
            name: data
          - name: config
            configMap:
              name: {{ template "elasticsearch.fullname" . }}-config
              items:
                - key: master.yml
                  path: elasticsearch.yml
